//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
//
cplusplus {{
#include "IPvXAddress.h"
#include "Coord.h"  
#include "simtime_t.h"
#include <vector>
}}

class noncobject IPvXAddress;
class noncobject Coord;
class noncobject vector;

packet carBeacon {
    IPvXAddress address;
    Coord speed;
    Coord position;
}

class anchor {
    Coord positionOfPreviousForwarder;
    Coord positionOfCurrentNode;
    Coord speedOfPreviousForwarder;
    Coord speedOfCurrentNode;
    Coord position;
}//;    



packet carPacket {
    
    Coord destinationPosition;
    IPvXAddress originatorAddress;   
    IPvXAddress destinationAddress;
    unsigned int aSetOfAnchorPoints;
    unsigned int copyOfASetOfAnchorPoints;
}
    
packet PGB {
    IPvXAddress originatorAddress;
    IPvXAddress destAddress;
    Coord previousForwarderSpeed;
    Coord previousForwarderPosition;
    unsigned int pgbCounter;
    simtime_t travelTime;
    unsigned int numOfHops;
    unsigned int averageNumOfNeighbors;
    unsigned int minimumNumOfNeighbors;
    Coord originatorPosition;
    Coord originatorSpeed;
    unsigned int seqNum;
    unsigned int aSetOfAnchorPoints;
}

packet AGF {
    IPvXAddress originatorAddress;
    IPvXAddress destAddress;    
    simtime_t travelTime;
    unsigned int numOfHops;
    unsigned int averageNumOfNeighbors;
    unsigned int minimumNumOfNeighbors;
    Coord destPosition;
    Coord destSpeed;
    unsigned int aSetOfAnchorPoints;
    unsigned int copyOfASetOfAnchorPoints;
}

packet stGuard {
    IPvXAddress activatorAddress;
    unsigned int stGuardCounter;
    unsigned int stGuardTTL;
    Coord guardedPosition;
    double guardedRadius;
}

packet trGuard {
    IPvXAddress activatorAddress;
    unsigned int trGuardCounter;
    unsigned int trGuardTTL;
    Coord guardedPosition;
    double guardedRadius;
    Coord activatorSpeed;
}
    
